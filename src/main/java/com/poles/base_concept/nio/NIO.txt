
1. Java NIO,  java non-blocking I/O,  Java New I/O,  同步非阻塞

2. NIO相关类都被放在java.nio包下，并且对原有的java.io包中的很多类进行了改写

3. NIO三个核心：Channel、Buffer、Selector

4. NIO是面向缓冲区，或者面向块编程的。数据读取到一个它稍后处理的缓冲区，需要时可以在缓冲区中前后移动，这就增加了处理过程中的灵活性，
   使用它可以提供非阻塞式的高伸缩网络。

5. Java NIO的非阻塞模式，使一个线程从某同通道发送请求或者读取数据，但是他仅能得到目前可用的数据，如果目前没有数据可用时，就什么都不会获取，
而不是保持线程阻塞，所以直至数据变的可以读取之前，该线程可以继续做其它的事情。非阻塞写也是如此，一个线程请求写入一些数据到某通道，但不需要等待它完全写入，
这个线程同时可以去做别的事情。

6. 通俗理解：NIO是可以做到用一个线程来处理多个操作的。假设有10000个请求过来，根据实际情况，可以分配50或者100个线程来处理。不想之前的阻塞IO那样，非得分配10000个。

7. HTTP2.0使用了多路复用的技术，做到同一个连接并发处理多个请求的数量比HTTP1.1大了好几个数量级



NIO与BIO的比较：
（1）BIO以流的方式处理数据，而NIO以块的方式处理数据。块的I/O效率要比流的I/O效率高很多
（2）BIO是阻塞的，NIO是非阻塞的
（3）BIO基于字节流和字符流进行操作，而NIO基于Channel和Buffer进行操作，数据总是从通道读取到缓冲区，或者从缓冲区写入到通道（缓冲区是沟通客户端与通道之间的桥梁）
Selector(选择器）用于监听多个通道的事件（比如：连接请求、数据到达等），因此使用单个线程就可以监听多个客户端通道。


