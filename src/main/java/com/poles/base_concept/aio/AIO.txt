(1) JDK7 引入了 Asynchronous I/O, 即AIO。在进行I/O变成中，常用到两种模式：Reactor和Proactor。 Java的NIO就是Reactor,
当有事件触发时，服务器端得到通知，进行相应的处理。

(2) AIO 即 NIO2.0， 叫做异步不阻塞的 IO。 AIO引入异步通道的概念，采用了Proactor模式，简化了程序编写，有效的请求才启动线程，
它的特点是先由操作系统完成后才通知服务端程序启动线程去处理，一般适用于连接数较多且连接时间较长的应用。

(3) 目前AIO还没有被广泛应用，Netty也是基于NIO，而不是AIO，因此AIO暂时不深入。
    参考资料：http://www.52im.net/thread-306-1-1.html


   同步非阻塞： A 调用 B时，如果 B 正在忙， A 不需阻塞，可以干点别的事，一会儿再轮询一下，重复A调B的整个过程
   异步非阻塞： A 调用 B，发现 B 正在忙，A 不需要阻塞，可以干点别的事，一会儿 B 忙完了，主动过来响应A（回调A）

   同步就是：A 调用 B
   异步就是：A 调用 B，然后 B 回调 A